// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OutputManagementComponent.data;

#nullable disable

namespace OutputManagementComponent.Migrations
{
    [DbContext(typeof(OMCDbContext))]
    [Migration("20250617114837_EventList")]
    partial class EventList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OutputManagementComponent.Data.Entities.NotificatieEntity", b =>
                {
                    b.Property<int>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DbId"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateLastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("KvkNummer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uuid");

                    b.Property<int>("TemplateVersion")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("DbId");

                    b.HasIndex("KvkNummer");

                    b.HasIndex("Reference")
                        .IsUnique();

                    b.ToTable("notificaties");
                });

            modelBuilder.Entity("OutputManagementComponent.Data.Entities.NotificatieEventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateLastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Reference");

                    b.ToTable("notificatieevents");
                });

            modelBuilder.Entity("OutputManagementComponent.Data.Entities.OndernemingEntity", b =>
                {
                    b.Property<string>("KvkNummer")
                        .HasColumnType("text");

                    b.HasKey("KvkNummer");

                    b.ToTable("ondernemingen");
                });

            modelBuilder.Entity("OutputManagementComponent.data.Entities.ContactMethodeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attempted")
                        .HasColumnType("boolean");

                    b.Property<int>("NotificatieEntityDbId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NotificatieEntityDbId");

                    b.ToTable("contactmethodes");
                });

            modelBuilder.Entity("OutputManagementComponent.Data.Entities.NotificatieEntity", b =>
                {
                    b.HasOne("OutputManagementComponent.Data.Entities.OndernemingEntity", "Onderneming")
                        .WithMany("Notificaties")
                        .HasForeignKey("KvkNummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Onderneming");
                });

            modelBuilder.Entity("OutputManagementComponent.Data.Entities.NotificatieEventEntity", b =>
                {
                    b.HasOne("OutputManagementComponent.Data.Entities.NotificatieEntity", "Notificatie")
                        .WithMany("Events")
                        .HasForeignKey("Reference")
                        .HasPrincipalKey("Reference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notificatie");
                });

            modelBuilder.Entity("OutputManagementComponent.data.Entities.ContactMethodeEntity", b =>
                {
                    b.HasOne("OutputManagementComponent.Data.Entities.NotificatieEntity", "Notificatie")
                        .WithMany("ContactMethodes")
                        .HasForeignKey("NotificatieEntityDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notificatie");
                });

            modelBuilder.Entity("OutputManagementComponent.Data.Entities.NotificatieEntity", b =>
                {
                    b.Navigation("ContactMethodes");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("OutputManagementComponent.Data.Entities.OndernemingEntity", b =>
                {
                    b.Navigation("Notificaties");
                });
#pragma warning restore 612, 618
        }
    }
}
